version: '3.7'
services:

  redis-service:
    image: redislabs/redismod
    ports:
      - "6379:6379"
    networks:
      - redis-microservices-network
    restart: always
    
 redisinsight:
   image: redislabs/redisinsight
   ports:
     - 8001:8001
   networks:
     - redis-microservices-network
   restart: always
 

  mysql-debezium-service:
    build:
      context: ./mysql-database
      dockerfile: Dockerfile
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=debezium
      - MYSQL_USER=mysqluser
      - MYSQL_PASSWORD=mysqlpw
    networks:
      - redis-microservices-network
    restart: always

  db-to-streams-service:
    build:
      context: ./db-to-streams-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    networks:
      - redis-microservices-network
    restart: always
    depends_on:
      - mysql-debezium-service
      - redis-service

  streams-to-redisgraph-service:
    build:
      context: ./streams-to-redisgraph-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    networks:
      - redis-microservices-network
    restart: always
    depends_on:
      - mysql-debezium-service
      - redis-service

  sql-rest-api:
    build:
      context: ./sql-rest-api
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    networks:
      - redis-microservices-network
    depends_on:
      - mysql-debezium-service
    restart: always

  caching-service:
    build:
      context: ./caching-service
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    networks:
      - redis-microservices-network
    depends_on:
      - mysql-debezium-service
      - redis-service
    restart: always

  streams-to-redisearch-service:
    build:
      context: ./streams-to-redisearch-service
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    networks:
      - redis-microservices-network
    depends_on:
      - redis-service
    restart: always

  ws-notifications-service:
      build:
        context: ./notifications-service-node
        dockerfile: Dockerfile
      ports:
        - "8888:8888"
      networks:
        - redis-microservices-network
      depends_on:
        - redis-service
      restart: always
      
  front-end:
    build:
      context: ./ui-redis-front-end/redis-front
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    networks:
      - redis-microservices-network
    depends_on:
      - redis-service
      - mysql-debezium-service
      - streams-to-redisgraph-service
      - streams-to-redisearch-service
      - db-to-streams-service
      - caching-service
      - sql-rest-api
    restart: always

networks:
  redis-microservices-network:
    driver: bridge
